name: Python application

on:
  push:
    branches: [ "main" ]
    tags: [ '*' ]  # Trigger on any tag push
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write  # Needed for creating releases
env:
  DISPLAY: ":99.0"
  QT_SELECT: "qt6"

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      # ... (rest of your test steps)

  build-windows:
    needs: test  # Run after tests pass
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Create Executable
        uses: sayyid5416/pyinstaller@v1
        with:
          python_ver: '3.12'
          spec: 'ui.spec'
          requirements: 'requirements.txt'
          upload_exe_with_name: ''
          options: ''
      - name: Compress dist folder
        run: |
          Compress-Archive -Path .\dist\* -DestinationPath windows-dist.zip
      - name: Upload Windows Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: windows-dist
          path: windows-dist.zip

  build-linux:
    needs: test  # Run after tests pass
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.12
        uses: actions/setup-python@v3
        with:
          python-version: "3.12"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Build Executable
        run: |
          pip install pyinstaller
          pyinstaller ui.spec
      - name: Compress dist folder
        run: |
          zip -r linux-dist.zip dist/
      - name: Upload Linux Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: linux-dist
          path: linux-dist.zip

  release:
    if: startsWith(github.ref, 'refs/tags/')  # Only run on tag push
    needs: [build-windows, build-linux]
    runs-on: ubuntu-latest
    steps:
      - name: Download Windows Build Artifact
        uses: actions/download-artifact@v3
        with:
          name: windows-dist
          path: .
      - name: Download Linux Build Artifact
        uses: actions/download-artifact@v3
        with:
          name: linux-dist
          path: .
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
      - name: Upload Windows Build to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./windows-dist.zip
          asset_name: windows-dist.zip
          asset_content_type: application/zip
      - name: Upload Linux Build to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./linux-dist.zip
          asset_name: linux-dist.zip
          asset_content_type: application/zip
